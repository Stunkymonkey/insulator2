name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 14.x
        uses: actions/setup-node@v3
        with:
          node-version: 14.x
          cache: "yarn"
      - run: npm install -g yarn

      - name: Install npm dependencies
        run: yarn install

      - name: Install MacOS dependencies
        if: ${{ matrix.os == 'macos-latest' }}
        run: brew install cmake openssl@3 cyrus-sasl

      - name: Install Ubuntu dependencies
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt update -y
          sudo apt install libwebkit2gtk-4.0-dev libdbus-1-dev pkg-config libgtk-3-dev libsoup2.4-dev \
              build-essential curl wget libsasl2-dev libssl-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Cargo Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - run: yarn lint

      - name: Build MacOS artifact
        if: ${{ matrix.os == 'macos-latest' }}
        run: yarn tauri build
        env:
          PKG_CONFIG_PATH: "/usr/local/opt/openssl@3/lib/pkgconfig"

      - name: Build Ubuntu artifact
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: yarn tauri build
# WIP: Windows
# build-windows:
#   runs-on: windows-latest
#   steps:
#     - uses: actions/checkout@v3
#     - name: Use Node.js 14.x
#       uses: actions/setup-node@v3
#       with:
#         node-version: 14.x
#         cache: "yarn"
#     - run: npm install -g yarn

#     - name: Install dependencies
#       run: |
#         yarn install
#         vcpkg install openssl:x64-windows-static-md

#     - name: Cargo Cache
#       uses: actions/cache@v1
#       with:
#         path: ~/.cargo
#         key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.toml') }}
#         restore-keys: |
#           ${{ runner.os }}-cargo-${{ hashFiles('Cargo.toml') }}
#           ${{ runner.os }}-cargo

#     - name: Build
#       run: yarn tauri build
